{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","fetch","resp","json","data","gifts","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAmB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCRlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPCK,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdN,EADc,iDACkCK,EADlC,+DAGDE,MAAMP,GAHL,cAGdQ,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,iBAAiBf,QAVrB,kBAabW,GAba,4CAAH,sDCKZK,EAAW,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPhB,EAASC,GACRgB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGlB,CAACZ,IAEGa,EDbwBK,CAAalB,GAAhCS,EAF0B,EAE/BJ,KAAaO,EAFkB,EAElBA,QAEpB,OACI,oCACI,4BAAKZ,GAGDY,GAAW,uBAAGhB,UAAU,oCAAb,YAGf,yBAAKA,UAAU,aAEHa,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAKX,EAAIf,IACLe,UElBvBY,EAAe,WAAM,MAIMzC,mBAAS,CAAC,cAJhB,mBAIvB0C,EAJuB,KAIXC,EAJW,KAM9B,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAa5C,cAAe4C,IAE5B,6BAEA,4BAEQD,EAAWd,KAAI,SAAAP,GAAQ,OAClB,kBAAC,EAAD,CACGmB,IAAKnB,EACLA,SAAUA,U,MClBtCuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1ca90f97.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","    export const getGifts = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=71bQw1Z8mPeipljs7TL5kZSMB2tkICOk`;\r\n\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifts = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        })\r\n        return gifts;\r\n    }","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifts } from '../helpers/getGifts'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {\r\n                loading && <p className='animate__animated animate__flash'>Cargando</p>\r\n            }\r\n\r\n            <div className='card-grid'>\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}/>\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts(category)\r\n        .then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state; \r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport { GiftGrid } from './components/GiftGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setcategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setcategories} />\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                         <GiftGrid\r\n                            key={category} \r\n                            category={category} />\r\n                         )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}